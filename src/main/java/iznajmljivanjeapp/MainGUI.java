/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package iznajmljivanjeapp;

import com.formdev.flatlaf.FlatLightLaf;
import framework.App;
import framework.DbEngine;
import framework.config.AppConfig;
import framework.injector.TypeToken;
import framework.simplelogger.LogLevel;
import framework.simplelogger.SimpleLogger;
import iznajmljivanjeapp.domain.Dozvola;
import iznajmljivanjeapp.domain.Iznajmljivanje;
import iznajmljivanjeapp.domain.Smena;
import iznajmljivanjeapp.domain.StavkaIznajmljivanja;
import iznajmljivanjeapp.domain.TerminDezurstva;
import iznajmljivanjeapp.domain.Vozac;
import iznajmljivanjeapp.domain.Vozilo;
import iznajmljivanjeapp.domain.Zaposleni;
import iznajmljivanjeapp.repositories.Repository;
import iznajmljivanjeapp.repositories.dbrepositories.DozvolaDbRepository;
import iznajmljivanjeapp.repositories.dbrepositories.IznajmljivanjeDbRepository;
import iznajmljivanjeapp.repositories.dbrepositories.SmenaDbRepository;
import iznajmljivanjeapp.repositories.dbrepositories.StavkaIznajmljivanjaDbRepository;
import iznajmljivanjeapp.repositories.dbrepositories.TerminDezurstvaDbRepository;
import iznajmljivanjeapp.repositories.dbrepositories.VozacDbRepository;
import iznajmljivanjeapp.repositories.dbrepositories.VoziloDbRepository;
import iznajmljivanjeapp.repositories.dbrepositories.ZaposleniDbRepository;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Djurkovic
 */
public class MainGUI extends javax.swing.JFrame {

    
    private App app;

    /**
     * Creates new form MainGUI
     */
    public void initServer() {
       
        
        
        SimpleLogger.LOG_SENSITIVITY = LogLevel.LOG_INFO;

        app = new App();

        app.setAppConfig(new AppConfig.Builder()
                .addDbHost("localhost")
                .addDbEngine(DbEngine.MYSQL)
                .addDbPortNumber(3306)
                .addImeBaze("projektovanjesoftvera_seminarski")
                .addImeTestBaze("projektovanjesoftvera_seminarski_test")
                .addListeningPort(9999)
                .addDbUsername("root")
                .addDbPassword("")
                .build()
        );

        var container = app.getContainer();
        container.register(new TypeToken<Repository<Dozvola>>() {
        }.getType(), DozvolaDbRepository::new);
        container.register(new TypeToken<Repository<Vozac>>() {
        }.getType(), VozacDbRepository::new);
        container.register(new TypeToken<Repository<Vozilo>>() {
        }.getType(), VoziloDbRepository::new);
        container.register(new TypeToken<Repository<Zaposleni>>() {
        }.getType(), ZaposleniDbRepository::new);
        container.register(new TypeToken<Repository<Smena>>() {
        }.getType(), SmenaDbRepository::new);
        container.register(new TypeToken<Repository<StavkaIznajmljivanja>>() {
        }.getType(), StavkaIznajmljivanjaDbRepository::new);
        container.register(new TypeToken<Repository<TerminDezurstva>>() {
        }.getType(), TerminDezurstvaDbRepository::new);
        container.register(new TypeToken<Repository<Iznajmljivanje>>() {
        }.getType(), IznajmljivanjeDbRepository::new);

        SimpleLogger.setSink((s) -> {
            SwingUtilities.invokeLater(() -> txtLog.append(s + "\n"));

        });

    }

    public MainGUI() {
        initComponents();
        txtLog.setEditable(false);
        txtLog.setEnabled(true);
        initServer();
        app.addPropertyChangeListener(evt -> {
            if ("isRunning".equals(evt.getPropertyName())) {
                boolean running = (Boolean) evt.getNewValue();
                SwingUtilities.invokeLater(() -> {
                    if(running) {
                        btnStart.setText("Server je pokrenut...");
                        btnStop.setText("Zaustavi server");
                        
                    }
                    else {
                        btnStart.setText("Pokreni server");
                        btnStop.setText("Server nije pokrenut");
                    }
                    btnStart.setEnabled(!running);
                    btnStop.setEnabled(running);
                });
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        btnStart = new javax.swing.JButton();
        btnConfig = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Serverska konzola");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Serverska konzola");

        txtLog.setColumns(20);
        txtLog.setRows(5);
        txtLog.setEnabled(false);
        jScrollPane1.setViewportView(txtLog);

        btnStart.setText("Pokreni server");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnConfig.setText("Promena konfiguracije");
        btnConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfigActionPerformed(evt);
            }
        });

        btnClear.setText("Oƒçisti Log");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnStop.setText("Server nije pokrenut");
        btnStop.setEnabled(false);
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(btnClear)
                        .addGap(37, 37, 37)
                        .addComponent(btnStop)
                        .addGap(18, 18, 18)
                        .addComponent(btnStart)
                        .addGap(18, 18, 18)
                        .addComponent(btnConfig)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtLog.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed

        new Thread(() -> app.run(MainGUI.class)).start();
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        app.stop();
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfigActionPerformed
        new ConfigEdit(this,true,app).setVisible(true);
    }//GEN-LAST:event_btnConfigActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.installLookAndFeel("FlatLaf Light", "com.formdev.flatlaf.FlatLightLaf");
            UIManager.installLookAndFeel("FlatLaf Dark", "com.formdev.flatlaf.FlatDarkLaf");
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                var g = new MainGUI();
                g.setLocationRelativeTo(null);
                g.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnConfig;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtLog;
    // End of variables declaration//GEN-END:variables
}
